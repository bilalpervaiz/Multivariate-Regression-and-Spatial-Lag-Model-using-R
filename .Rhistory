library(sf)
library(ggplot2)
library(dplyr)
wards <- sf::st_read("LondonWards.shp")
ggplot(data = wards) +
geom_sf(aes(fill = AGc_2)) +
scale_fill_viridis_c(direction = -1) +
labs(fill='Average GCSE')
View(wards)
View(wards)
pd_2
#Ploting values of Median Age 2013 and Average GCSE
ggplot(data = wards, aes(x = Pd_2, y = AGc_2)) +
geom_point() +
xlab("Population Density - 2013") +
ylab("Average GCSE - 2014") +
theme_minimal()
View(wards)
View(wards)
#Ploting values of Median Age 2013 and Average GCSE
ggplot(data = wards, aes(x = Pd..2, y = AGc_2)) +
geom_point() +
xlab("Population Density - 2013") +
ylab("Average GCSE - 2014") +
theme_minimal()
#Ploting values of Median Age 2013 and Average GCSE
ggplot(data = wards, aes(x = Pd-2, y = AGc_2)) +
geom_point() +
xlab("Population Density - 2013") +
ylab("Average GCSE - 2014") +
theme_minimal()
#Ploting values of Median Age 2013 and Average GCSE
ggplot(data = wards, aes(x = Pd__2, y = AGc_2)) +
geom_point() +
xlab("Population Density - 2013") +
ylab("Average GCSE - 2014") +
theme_minimal()
#Apply Linear Regression Method to see correlation between two parameters
ggplot(data = wards, aes(x = Pd__2, y = AGc_2)) +
geom_point() +xlab("Population Density") +
ylab("Average GCSE - 2014") +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=FALSE) +
theme_minimal()
#Ploting values of Median Age 2013 and Average GCSE
ggplot(data = wards, aes(x = X_EFL_, y = AGc_2)) +
geom_point() +
xlab("Population Density - 2013") +
ylab("Average GCSE - 2014") +
theme_minimal()
#Apply Linear Regression Method to see correlation between two parameters
ggplot(data = wards, aes(x = X_EFL_, y = AGc_2)) +
geom_point() +xlab("Population Density") +
ylab("Average GCSE - 2014") +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=FALSE) +
theme_minimal()
#Ploting values of Median Age 2013 and Average GCSE
ggplot(data = wards, aes(x = E_16_, y = AGc_2)) +
geom_point() +
xlab("Population Density - 2013") +
ylab("Average GCSE - 2014") +
theme_minimal()
#Apply Linear Regression Method to see correlation between two parameters
ggplot(data = wards, aes(x = E_16_, y = AGc_2)) +
geom_point() +xlab("Population Density") +
ylab("Average GCSE - 2014") +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=FALSE) +
theme_minimal()
#Ploting values of Median Age 2013 and Average GCSE
ggplot(data = wards, aes(x = C_2014, y = AGc_2)) +
geom_point() +
xlab("Population Density - 2013") +
ylab("Average GCSE - 2014") +
theme_minimal()
#Ploting values of Median Age 2013 and Average GCSE
ggplot(data = wards, aes(x = Cp_201, y = AGc_2)) +
geom_point() +
xlab("Population Density - 2013") +
ylab("Average GCSE - 2014") +
theme_minimal()
#Apply Linear Regression Method to see correlation between two parameters
ggplot(data = wards, aes(x = Cp_201, y = AGc_2)) +
geom_point() +xlab("Population Density") +
ylab("Average GCSE - 2014") +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=FALSE) +
theme_minimal()
model <- lm(AGc_2 ~ Cp_201, data=wards)
summary(model)
#Ploting values of Median Age 2013 and Average GCSE
ggplot(data = wards, aes(x = MH_20, y = AGc_2)) +
geom_point() +
xlab("Population Density - 2013") +
ylab("Average GCSE - 2014") +
theme_minimal()
#Ploting values of Median Age 2013 and Average GCSE
ggplot(data = wards, aes(x = log(MH_20), y = AGc_2)) +
geom_point() +
xlab("Population Density - 2013") +
ylab("Average GCSE - 2014") +
theme_minimal()
#Apply Linear Regression Method to see correlation between two parameters
ggplot(data = wards, aes(x = log(MH_20), y = AGc_2)) +
geom_point() +xlab("Population Density") +
ylab("Average GCSE - 2014") +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=FALSE) +
theme_minimal()
model <- lm(AGc_2 ~ log(MH_20), data=wards)
summary(model)
#Ploting values of Median Age 2013 and Average GCSE
ggplot(data = wards, aes(x = E_16_, y = AGc_2)) +
geom_point() +
xlab("Population Density - 2013") +
ylab("Average GCSE - 2014") +
theme_minimal()
#Apply Linear Regression Method to see correlation between two parameters
ggplot(data = wards, aes(x = E_16_, y = AGc_2)) +
geom_point() +xlab("Population Density") +
ylab("Average GCSE - 2014") +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=FALSE) +
theme_minimal()
# Summary of the model
model <- lm(AGc_2 ~ E_16_, data=wards)
summary(model)
#Ploting values of median Age  2013  and Average GCSE
ggplot(data = wards, aes(x = MdA_2013, y = AGc_2)) +
geom_point() +
xlab("median Age  2013") +
ylab("Average GCSE - 2014") +
theme_minimal()
#Ploting Another Independent Variable Employment rate (16-64) - 2011 and Average GCSE
ggplot(data = wards, aes(x = E_16_, y = AGc_2)) +
geom_point() +
xlab("Employment rate (16-64)") +
ylab("Average GCSE - 2014") +
theme_minimal()
#Apply Linear Regression Method to see correlation between two parameters
ggplot(data = wards, aes(x = E_16_, y = AGc_2)) +
geom_point() +xlab("Employment rate (16-64)") +
ylab("Average GCSE - 2014") +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=FALSE) +
theme_minimal()
# Summary of the linear model for Another variable
model <- lm(AGc_2 ~ E_16_, data=wards)
summary(model)
res.df <- data.frame(res = model1$residuals)
res.df <- data.frame(res = model$residuals)
ggplot(data = res.df, aes(x = res)) +
geom_histogram() +xlab("Residual") +
ylab("Count") +
theme_minimal()
#Ploting Another Independent Variable Employment rate (16-64) - 2011 and Average GCSE
ggplot(data = wards, aes(x = E_16_, y = AGc_2)) +
geom_point() +
xlab("Employment rate (16-64)") +
ylab("Average GCSE - 2014") +
theme_minimal()
#Apply Linear Regression Method to see correlation between Employment and GSCE Score
ggplot(data = wards, aes(x = E_16_, y = AGc_2)) +
geom_point() +xlab("Employment rate (16-64)") +
ylab("Average GCSE - 2014") +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=FALSE) +
theme_minimal()
# Summary of the Multivariate model for two Independent variable with GCSE Score
multivariate <- lm(AGc_2 ~ MdA_2013+E_16_, data=wards)
summary(multivariate)
# Summary of the linear model for Employment variable with GCSE Score
model <- lm(AGc_2 ~ E_16_, data=wards)
summary(model)
# Summary of the linear model for Employment variable with GCSE Score
model <- lm(AGc_2 ~ MdA_2013, data=wards)
summary(model)
# Summary of the linear model for Employment variable with GCSE Score
model <- lm(AGc_2 ~ MdA_2013, data=wards)
summary(model)
# Summary of the linear model for Employment variable with GCSE Score
model <- lm(AGc_2 ~ E_16_, data=wards)
summary(model)
# Summary of the Multivariate model for two Independent variable with GCSE Score
multivariate <- lm(AGc_2 ~ MdA_2013+log(E_16_), data=wards)
summary(multivariate)
# Summary of the Multivariate model for two Independent variable with GCSE Score
multivariate <- lm(AGc_2 ~ MdA_2013+log(MH_20), data=wards)
summary(multivariate)
# Summary of the Multivariate model for two Independent variable with GCSE Score
multivariate <- lm(AGc_2 ~ MdA_2013+E_16_, data=wards)
summary(multivariate)
# Summary of the linear model for Employment variable with GCSE Score
model <- lm(AGc_2 ~ MP_20, data=wards)
# Summary of the linear model for Employment variable with GCSE Score
model <- lm(AGc_2 ~ MH_20, data=wards)
summary(model)
#Apply Linear Regression Method to see correlation between Employment and GSCE Score
ggplot(data = wards, aes(x = MH_20, y = AGc_2)) +
geom_point() +xlab("Employment rate (16-64)") +
ylab("Average GCSE - 2014") +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=FALSE) +
theme_minimal()
#Apply Linear Regression Method to see correlation between Employment and GSCE Score
ggplot(data = wards, aes(x = log(MH_20), y = AGc_2)) +
geom_point() +xlab("Employment rate (16-64)") +
ylab("Average GCSE - 2014") +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=FALSE) +
theme_minimal()
hist(wards$MH_20)
hist(log(wards$MH_20))
#Ploting Another Independent Variable Employment rate (16-64) - 2011 and Average GCSE
ggplot(data = wards, aes(x = E_16_, y = AGc_2)) +
geom_point() +
xlab("Employment rate (16-64)") +
ylab("Average GCSE - 2014") +
theme_minimal()
model_all<- lm(AGc_2~. , data = wards)
model_all<- lm(AGc_2 ~ . , data = wards)
new_data<- select(is.numeric(wards))
library(ggplot2)
library(dplyr)
new_data<- select(is.numeric(wards))
# Assuming your dataset is named 'data'
library(dplyr)
numeric_cols <- wards %>%
select_if(~ is.numeric(.) & !identical(., wards[, ncol(wards)]))
View(numeric_cols)
numeric_cols<- as.data.frame(numeric_cols)
# Assuming your data frame is named 'df'
df_without_last_column <- numeric_cols[, -ncol(numeric_cols)]
View(df_without_last_column)
model_all<- lm(AGc_2 ~ . , data = df_without_last_column)
summary(model_all)
# Summary of the Multivariate model for two Independent variable with GCSE Score
multivariate <- lm(AGc_2 ~ MdA_2013+E_16_, data=wards)
summary(multivariate)
#Apply Linear Regression Method to see correlation between Employment and GSCE Score
ggplot(data = wards, aes(x = E_16_, y = AGc_2)) +
geom_point() +xlab("Employment rate (16-64)") +
ylab("Average GCSE - 2014") +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=FALSE) +
theme_minimal()
#Apply Linear Regression Method to see correlation between Employment and GSCE Score
ggplot(data = wards, aes(x = E_16_, y = AGc_2, z =MdA_2013)) +
geom_point() +xlab("Employment rate (16-64)") +
ylab("Average GCSE - 2014") +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=FALSE) +
theme_minimal()
#Multicollinearity Test
cor.test(wards$MdA_2013, E_16_,
method = "pearson")
cor.test(wards$MdA_2013, wards$E_16_, method = "pearson")
#Modelling Residual of Multivariate Model
res.df <- data.frame(res = multivariate$residuals)
ggplot(data = res.df, aes(x = res)) +
geom_histogram() +xlab("Residual") +
ylab("Count") +
theme_minimal()
wards <- wards %>%
mutate(resids = res.df$res)
ggplot(data = wards) +
geom_sf(aes(fill = resids)) +
scale_colour_gradient2( low = "green", mid = "white",
high = "brown", midpoint = 0,
aesthetics = "fill") +
labs(fill='MultiVariate Residuals')
install.packages(c("spdep", "broom", "spatialreg"))
coordsW <- st_geometry(wards) %>%
st_centroid()
wards1<- sf::st_read("LondonWards.shp")
View(wards1)
coordsW <- st_geometry(wards1) %>%
st_centroid()
library(spdep)
library(broom)
library(spatialreg)
coordsW <- st_geometry(wards1) %>%
st_centroid()
LWard_nb2 <-coordsW %>%
knearneigh(., k=4)
coordsW <- st_geometry(wards1) %>%
st_centroid()
LWard_nb2 <-coordsW %>%
knearneigh(., k=4)
LWard_knn <- LWard_nb2 %>%
knn2nb()
slag_model_knn <- lagsarlm(AGc_2 ~MdA_2013+E_16_,
data = wards,
nb2listw(LWard_knn, style="C"))
tidy(slag_model_knn)
